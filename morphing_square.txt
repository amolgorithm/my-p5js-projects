var maxCornerRadius = 90;
var whichCorner = 0;
var direction = 1; 
var morphMode = true;

var Square = function() {
    this.size = 200;
    this.x = 200;
    this.y = 200;
    this.colour = color(150, 150, 150, 200);
    this.cornerRadius = [0, 0, 0, 0];
};


var drawSquare = function(square) {
    fill(square.colour);
    rectMode(CENTER);
    noStroke();
    rect(square.x, square.y, square.size, square.size, square.cornerRadius[0], square.cornerRadius[1], square.cornerRadius[2], square.cornerRadius[3]);
};

var changeCorner = function(square) {
    var deltaSize = maxCornerRadius / 22.5;
    if ((square.cornerRadius[whichCorner] <= maxCornerRadius && direction === 1) ||
        (square.cornerRadius[whichCorner] >= 0 && direction === -1)) {
        square.cornerRadius[whichCorner] += (deltaSize * direction);
        
        square.colour = color(150, 150, 150, alpha(square.colour) - direction);
    } else {
        if (square.cornerRadius[whichCorner] < 0) {
            square.cornerRadius[whichCorner] = 0;
        }
        whichCorner = (whichCorner + 1) % 4;
        
        if (whichCorner === 0) {
            direction *= -1;
        }
    }
};

var square = new Square();


var draw = function() {
    background(250, 250, 20, 90);
    
    if (morphMode) {
        changeCorner(square);
    }
    drawSquare(square);
};

var mouseClicked = function() {
    morphMode = !morphMode;
};

var keyPressed = function() {
    var highestMaxCornerRadius = 100,
        lowestMaxCornerRadius = 5;
        
    switch(keyCode) {
        //38 is the ASCII value for up arrow
        case 38:
            if (maxCornerRadius < highestMaxCornerRadius) {
                maxCornerRadius += 5;
            }
            break;
            
        //40 is the ASCII value for down arrow
        case 40:
            if (maxCornerRadius > lowestMaxCornerRadius) {
                maxCornerRadius -= 5;
            }
            break;
    }
};